
@article{One1996,
  title = {{Smashing The Stack For Fun And Profit}},
  abstract = {`smash the stack` {[}C programming{]} n. On many C implementations
it is possible to corrupt the execution stack by writing past
the end of an array declared auto in a routine.  Code that does
this is said to smash the stack, and can cause return from the
routine to jump to a random address.  This can produce some of
the most insidious data-dependent bugs known to mankind.
Variants include trash the stack, scribble the stack, mangle
the stack; the term mung the stack is not used, as this is
never done intentionally. See spam; see also alias bug,
fandango on core, memory leak, precedence lossage, overrun screw.},
  number = {49},
  journaltitle = {{Phrack Magazine}},
  shortjournal = {{Phrack Mag.}},
  author = {One, Aleph},
  urldate = {2014-10-27},
  date = {1996-08-11},
  year = {1996},
  keywords = {Computer security},
  file = {.\:\: Phrack Magazine \:\:.:/home/anders/.zotero/zotero/cizepl1g.default/zotero/storage/7DSSHMHJ/14.html:text/html}
}

@book{Gollmann2011,
  location = {{Chichester, West Sussex}},
  edition = {{3rd ed}},
  title = {{Computer security}},
  isbn = {9780470741153},
  pagetotal = {436},
  publisher = {{Wiley}},
  author = {Gollmann, Dieter},
  date = {2011},
  year = {2011},
  keywords = {Computer security}
}

@online{CenterforHistoryandNewMedia,
  title = {{Zotero Quick Start Guide}},
  url = {http://zotero.org/support/quick_start_guide},
  author = {Center for History and New Media}
}

@online{SmashGuard,
  title = {{The buffer overflow page}},
  url = {https://engineering.purdue.edu/ResearchGroups/SmashGuard/BoF.html},
  titleaddon = {{www.SmashGuard.org - Electrical \& Computer Engineering - Purdue University}},
  author = {SmashGuard},
  urldate = {2014-11-02},
  file = {www.SmashGuard.org - Electrical & Computer Engineering - Purdue University:/home/anders/.zotero/zotero/cizepl1g.default/zotero/storage/BQ9KM94Z/BoF.html:text/html}
}


